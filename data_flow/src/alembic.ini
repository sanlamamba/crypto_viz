# A generic, single database configuration.

[alembic]
# Path to migration scripts
# Using forward slashes (/) for cross-platform compatibility
script_location = migrations

# Template used to generate migration file names; 
# Uncomment to prepend with date and time for better organization
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Path to add to sys.path if needed, defaults to current directory
prepend_sys_path = .

# Specify timezone for file timestamps, default is localtime
# timezone = UTC

# Max length of characters for slug field in filenames
# truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command, regardless of autogenerate
# revision_environment = false

# Allow .pyc/.pyo files without .py source files to be detected as revisions
# sourceless = false

# Location for version scripts, defaults to migrations/versions
# Customize for multiple version directories if needed
# version_locations = %(here)s/bar:%(here)s/bat:migrations/versions
version_path_separator = os  # Use OS-specific path separator

# Set to 'true' for recursive version search within version locations
# recursive_version_locations = false

# Output encoding when writing migration files
# output_encoding = utf-8

# SQLAlchemy URL configuration (leave blank, configured dynamically in env.py)
# sqlalchemy.url = driver://user:pass@localhost/dbname

[post_write_hooks]
# Optional post-write hooks, such as auto-formatting with black or ruff

# Uncomment to use "black" for formatting newly created revision scripts
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Uncomment to use "ruff" for linting and fixing newly created revision scripts
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
